digraph  G {
  n0 [shape=box,label="calcul.refactor.matrix.impl.MatriceCreuse.XY"]
  n1 [shape=octagon,label="calcul.refactor.matrix.impl.MatriceCreuse.XY.XY"];
  n2 [shape=octagon,label="calcul.refactor.matrix.impl.MatriceCreuse.XY.equals"];
  n3 [shape=octagon,label="calcul.refactor.matrix.impl.MatriceCreuse.XY.hashCode"];
  n4 [shape=doubleellipse,label="calcul.refactor.matrix.impl.MatriceCreuse.XY.x"];
  n5 [shape=doubleellipse,label="calcul.refactor.matrix.impl.MatriceCreuse.XY.y"];
  n6 [shape=box,label="calcul.refactor.matrix.impl.MatriceCreuse"]
  n7 [shape=octagon,label="calcul.refactor.matrix.impl.MatriceCreuse.MatriceCreuse"];
  n8 [shape=octagon,label="calcul.refactor.matrix.impl.MatriceCreuse.getLargeur"];
  n9 [shape=octagon,label="calcul.refactor.matrix.impl.MatriceCreuse.getHauteur"];
  n10 [shape=octagon,label="calcul.refactor.matrix.impl.MatriceCreuse.set"];
  n11 [shape=octagon,label="calcul.refactor.matrix.impl.MatriceCreuse.get"];
  n12 [shape=octagon,label="calcul.refactor.matrix.impl.MatriceCreuse.getTauxRemplissage"];
  n13 [shape=octagon,label="calcul.refactor.matrix.impl.MatriceCreuse.getNbNonNuls"];
  n14 [shape=doubleellipse,label="calcul.refactor.matrix.impl.MatriceCreuse.elements"];
  n15 [shape=doubleellipse,label="calcul.refactor.matrix.impl.MatriceCreuse.hauteur"];
  n16 [shape=doubleellipse,label="calcul.refactor.matrix.impl.MatriceCreuse.largeur"];
  n17 [shape=box,label="calcul.refactor.matrix.IMatrice"]
  n18 [shape=octagon,label="calcul.refactor.matrix.IMatrice.getLargeur"];
  n19 [shape=octagon,label="calcul.refactor.matrix.IMatrice.getHauteur"];
  n20 [shape=octagon,label="calcul.refactor.matrix.IMatrice.set"];
  n21 [shape=octagon,label="calcul.refactor.matrix.IMatrice.get"];
  n22 [shape=octagon,label="calcul.refactor.matrix.IMatrice.getTauxRemplissage"];
  n23 [shape=box,label="calcul.refactor.Calcul"]
  n24 [shape=octagon,label="calcul.refactor.Calcul.Calcul"];
  n25 [shape=octagon,label="calcul.refactor.Calcul.set"];
  n26 [shape=octagon,label="calcul.refactor.Calcul.get"];
  n27 [shape=octagon,label="calcul.refactor.Calcul.estCreuse"];
  n28 [shape=octagon,label="calcul.refactor.Calcul.optimiser"];
  n29 [shape=doubleellipse,label="calcul.refactor.Calcul.seuilCreuse"];
  n30 [shape=doubleellipse,label="calcul.refactor.Calcul.creuse"];
  n31 [shape=doubleellipse,label="calcul.refactor.Calcul.mat"];
  n32 [shape=box,label="calcul.refactor.MatricesTest"]
  n33 [shape=octagon,label="calcul.refactor.MatricesTest.testerMatricePleine"];
  n34 [shape=octagon,label="calcul.refactor.MatricesTest.testerMatriceCreuse"];
  n35 [shape=octagon,label="calcul.refactor.MatricesTest.testerTaux"];
  n36 [shape=box,label="calcul.refactor.matrix.MatriceFactory"]
  n37 [shape=octagon,label="calcul.refactor.matrix.MatriceFactory.createMatriceCreuse"];
  n38 [shape=octagon,label="calcul.refactor.matrix.MatriceFactory.createMatricePleine"];
  n39 [shape=octagon,label="calcul.refactor.matrix.MatriceFactory.createMatriceCreuse"];
  n40 [shape=octagon,label="calcul.refactor.matrix.MatriceFactory.createMatricePleine"];
  n41 [shape=octagon,label="calcul.refactor.matrix.MatriceFactory.copyTo"];
  n42 [shape=box,label="calcul.refactor.matrix.impl.MatricePleine"]
  n43 [shape=octagon,label="calcul.refactor.matrix.impl.MatricePleine.MatricePleine"];
  n44 [shape=octagon,label="calcul.refactor.matrix.impl.MatricePleine.getHauteur"];
  n45 [shape=octagon,label="calcul.refactor.matrix.impl.MatricePleine.getLargeur"];
  n46 [shape=octagon,label="calcul.refactor.matrix.impl.MatricePleine.set"];
  n47 [shape=octagon,label="calcul.refactor.matrix.impl.MatricePleine.get"];
  n48 [shape=octagon,label="calcul.refactor.matrix.impl.MatricePleine.getTauxRemplissage"];
  n49 [shape=octagon,label="calcul.refactor.matrix.impl.MatricePleine.getNbNonNuls"];
  n50 [shape=doubleellipse,label="calcul.refactor.matrix.impl.MatricePleine.tab"];
  n51 [shape=box,label="calcul.refactor.CalculTest"]
  n52 [shape=octagon,label="calcul.refactor.CalculTest.tester"];
  n53 [shape=folder,label="calcul.refactor.matrix.impl"];
  n54 [shape=folder,label="calcul.refactor.matrix"];
  n55 [shape=folder,label="calcul.refactor"];
  n1 -> n4 ;
  n1 -> n5 ;
  n2 -> n0 ;
  n2 -> n4 ;
  n2 -> n5 ;
  n3 -> n4 ;
  n3 -> n5 ;
  n6 -> n0 ;
  n6 -> n17 ;
  n7 -> n0 ;
  n7 -> n14 ;
  n7 -> n15 ;
  n7 -> n16 ;
  n8 -> n16 ;
  n9 -> n15 ;
  n10 -> n0 ;
  n10 -> n8 ;
  n10 -> n9 ;
  n10 -> n14 ;
  n11 -> n0 ;
  n11 -> n8 ;
  n11 -> n9 ;
  n11 -> n14 ;
  n12 -> n8 ;
  n12 -> n9 ;
  n12 -> n13 ;
  n13 -> n14 ;
  n23 -> n17 ;
  n24 -> n30 ;
  n24 -> n31 ;
  n24 -> n36 ;
  n24 -> n37 ;
  n25 -> n20 ;
  n25 -> n31 ;
  n26 -> n21 ;
  n26 -> n31 ;
  n27 -> n30 ;
  n28 -> n22 ;
  n28 -> n29 ;
  n28 -> n30 ;
  n28 -> n31 ;
  n28 -> n36 ;
  n28 -> n39 ;
  n28 -> n40 ;
  n33 -> n42 ;
  n33 -> n44 ;
  n33 -> n45 ;
  n33 -> n46 ;
  n33 -> n47 ;
  n34 -> n6 ;
  n34 -> n17 ;
  n34 -> n18 ;
  n34 -> n19 ;
  n34 -> n20 ;
  n34 -> n21 ;
  n35 -> n6 ;
  n35 -> n17 ;
  n35 -> n20 ;
  n35 -> n22 ;
  n37 -> n6 ;
  n37 -> n17 ;
  n38 -> n17 ;
  n38 -> n42 ;
  n39 -> n17 ;
  n39 -> n18 ;
  n39 -> n19 ;
  n39 -> n37 ;
  n39 -> n41 ;
  n40 -> n17 ;
  n40 -> n18 ;
  n40 -> n19 ;
  n40 -> n38 ;
  n40 -> n41 ;
  n41 -> n17 ;
  n41 -> n18 ;
  n41 -> n19 ;
  n41 -> n20 ;
  n41 -> n21 ;
  n42 -> n17 ;
  n43 -> n50 ;
  n44 -> n50 ;
  n45 -> n50 ;
  n46 -> n50 ;
  n47 -> n50 ;
  n48 -> n44 ;
  n48 -> n45 ;
  n48 -> n49 ;
  n49 -> n44 ;
  n49 -> n45 ;
  n49 -> n47 ;
  n52 -> n23 ;
  n52 -> n25 ;
  n52 -> n26 ;
  n52 -> n27 ;
  n52 -> n28 ;
  n0 -> n1 [style=dotted] ;
  n0 -> n2 [style=dotted] ;
  n0 -> n3 [style=dotted] ;
  n0 -> n4 [style=dotted] ;
  n0 -> n5 [style=dotted] ;
  n6 -> n7 [style=dotted] ;
  n6 -> n8 [style=dotted] ;
  n6 -> n9 [style=dotted] ;
  n6 -> n10 [style=dotted] ;
  n6 -> n11 [style=dotted] ;
  n6 -> n12 [style=dotted] ;
  n6 -> n13 [style=dotted] ;
  n6 -> n14 [style=dotted] ;
  n6 -> n15 [style=dotted] ;
  n6 -> n16 [style=dotted] ;
  n17 -> n18 [style=dotted] ;
  n17 -> n19 [style=dotted] ;
  n17 -> n20 [style=dotted] ;
  n17 -> n21 [style=dotted] ;
  n17 -> n22 [style=dotted] ;
  n23 -> n24 [style=dotted] ;
  n23 -> n25 [style=dotted] ;
  n23 -> n26 [style=dotted] ;
  n23 -> n27 [style=dotted] ;
  n23 -> n28 [style=dotted] ;
  n23 -> n29 [style=dotted] ;
  n23 -> n30 [style=dotted] ;
  n23 -> n31 [style=dotted] ;
  n32 -> n33 [style=dotted] ;
  n32 -> n34 [style=dotted] ;
  n32 -> n35 [style=dotted] ;
  n36 -> n37 [style=dotted] ;
  n36 -> n38 [style=dotted] ;
  n36 -> n39 [style=dotted] ;
  n36 -> n40 [style=dotted] ;
  n36 -> n41 [style=dotted] ;
  n42 -> n43 [style=dotted] ;
  n42 -> n44 [style=dotted] ;
  n42 -> n45 [style=dotted] ;
  n42 -> n46 [style=dotted] ;
  n42 -> n47 [style=dotted] ;
  n42 -> n48 [style=dotted] ;
  n42 -> n49 [style=dotted] ;
  n42 -> n50 [style=dotted] ;
  n51 -> n52 [style=dotted] ;
  n53 -> n0 [style=dotted] ;
  n53 -> n6 [style=dotted] ;
  n53 -> n42 [style=dotted] ;
  n54 -> n17 [style=dotted] ;
  n54 -> n36 [style=dotted] ;
  n55 -> n23 [style=dotted] ;
  n55 -> n32 [style=dotted] ;
  n55 -> n51 [style=dotted] ;
  n23 -> n17 [color=red] ;
  n24 -> n36 [color=red] ;
  n24 -> n37 [color=red] ;
  n25 -> n20 [color=red] ;
  n26 -> n21 [color=red] ;
  n28 -> n22 [color=red] ;
  n28 -> n36 [color=red] ;
  n28 -> n39 [color=red] ;
  n28 -> n40 [color=red] ;
}
